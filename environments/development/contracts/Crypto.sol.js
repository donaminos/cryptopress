// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"salary","type":"uint256"}],"name":"askForSalary","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"getWitheList","outputs":[{"name":"r","type":"address"}],"type":"function"},{"constant":false,"inputs":[],"name":"rejectInterruption","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"acceptInterruption","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"journalistAdress","type":"address"},{"name":"fullname","type":"string"}],"name":"registerJournalist","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"content","type":"string"}],"name":"sendProposalToRevoke","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"stopVotingPeriod","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"getCaller","outputs":[{"name":"caller","type":"address"}],"type":"function"},{"constant":false,"inputs":[],"name":"giveFundsBackToParticipants","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"value","type":"uint256"}],"name":"sendFundsToParticipate","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"proposalId","type":"uint256"}],"name":"voteForRevocation","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"sendFundsToParticipate","outputs":[],"type":"function"}],
    binary: "60606040526127606001556113886004556108438061001e6000396000f3606060405236156100985760e060020a600035046319d86cdd81146100a95780631fd602571461011e578063554cf56c1461016b5780635e2f357e1461016b5780636417a1051461017357806393c6ed92146101f2578063a56629b41461016b578063ab470f051461025a578063ad4b6ce01461016b578063ddacc15c14610279578063df8998601461028c578063dfa1b091146102b5575b6102bd5b600034116102bf57610002565b6102bd6004356000805b6003548110156102dd5733600160a060020a03166003600050828154811015610002576000919091526002027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0154600160a060020a0316141561011657600191505b6001016100b3565b61025c6000600060036000506000815481101561000257509052507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b8054600160a060020a0316905b5090565b6102bd6102db565b60408051602060248035600481810135601f81018590048502860185019096528585526102bd95813595919460449492939092019181908401838280828437509496505050505050506003805460018101808355828183801582901161031e5760020281600202836000526020600020918201910161031e91906103b9565b6040805160206004803580820135601f81018490048402850184019095528484526102bd949193602493909291840191908190840183828082843750949650505050505050600160a060020a0333166000908152602081905260408120541161046457610002565b335b60408051600160a060020a03929092168252519081900360200190f35b6102bd600435600081116106f857610002565b6102bd600435600160a060020a0333166000908152602081905260408120541161071357610002565b6102bd61009c565b005b600160a060020a03331660009081526020819052604090203490555b565b8115156102e957610002565b6004548311156102f95760045492505b604051600160a060020a03331690600090859082818181858883f15050505050505050565b505050919090600052602060002090600202016000506040805180820190915284815260208181018590528254600160a060020a0319168617835584516001848101805460008281528590209596959194600293821615610100026000190190911692909204601f9081018390048201939289019083901061042b57805160ff19168380011785555b5061045b929150610417565b50506002015b80821115610167578054600160a060020a031916815560018181018054600080835592600290821615610100026000190190911604601f8190106103fd57506103b3565b601f0160209004906000526020600020908101906103b391905b808211156101675760008155600101610417565b828001600101855582156103a7579182015b828111156103a757825182600050559160200191906001019061043d565b50505050505050565b6002805460018101808355828183801582901161049a5760060281600602836000526020600020918201910161049a9190610592565b50505091909060005260206000209060060201600060c06040519081016040528033815260200185815260200160016040518059106104d65750595b81815260209182028101820160409081529083526000838301819052429184019190915260609290920182905282518554600160a060020a03191617855582810151805160018781018054818752958590209698975095601f600292871615610100026000190190961691909104850184900481019491939092019083901061061057805160ff19168380011785555b50610640929150610417565b5050600060038201819055600482015560058101805460ff191690556006015b80821115610167578054600160a060020a031916815560018181018054600080835592600290821615610100026000190190911604601f8190106105f257505b506002820180546000808355918252602090912061057291810190610417565b601f0160209004906000526020600020908101906105d29190610417565b82800160010185558215610566579182015b82811115610566578251826000505591602001919060010190610622565b505060408201518160020160005090805190602001908280548282559060005260206000209081019282156106a2579160200282015b828111156106a25782518254600160a060020a0319161782556020929092019160019190910190610676565b506106c89291505b80821115610167578054600160a060020a03191681556001016106aa565b5050606082015160038201556080820151600482015560a0909101516005909101805460ff191690911790555050565b33600160a060020a0316600090815260208190526040902055565b600280548290811015610002576000919091526006027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad00180546001810180835590919082801582901161077857600083815260209020610778918101908301610417565b505050506002600050818154811015610002576000919091526006027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad00180546001810180835582818380158290116107e2576000838152602090206107e2918101908301610417565b5050506000928352506020909120018054600160a060020a03191633179055600280548290811015610002576000919091526006027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad101805460010190555056",
    unlinked_binary: "60606040526127606001556113886004556108438061001e6000396000f3606060405236156100985760e060020a600035046319d86cdd81146100a95780631fd602571461011e578063554cf56c1461016b5780635e2f357e1461016b5780636417a1051461017357806393c6ed92146101f2578063a56629b41461016b578063ab470f051461025a578063ad4b6ce01461016b578063ddacc15c14610279578063df8998601461028c578063dfa1b091146102b5575b6102bd5b600034116102bf57610002565b6102bd6004356000805b6003548110156102dd5733600160a060020a03166003600050828154811015610002576000919091526002027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0154600160a060020a0316141561011657600191505b6001016100b3565b61025c6000600060036000506000815481101561000257509052507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b8054600160a060020a0316905b5090565b6102bd6102db565b60408051602060248035600481810135601f81018590048502860185019096528585526102bd95813595919460449492939092019181908401838280828437509496505050505050506003805460018101808355828183801582901161031e5760020281600202836000526020600020918201910161031e91906103b9565b6040805160206004803580820135601f81018490048402850184019095528484526102bd949193602493909291840191908190840183828082843750949650505050505050600160a060020a0333166000908152602081905260408120541161046457610002565b335b60408051600160a060020a03929092168252519081900360200190f35b6102bd600435600081116106f857610002565b6102bd600435600160a060020a0333166000908152602081905260408120541161071357610002565b6102bd61009c565b005b600160a060020a03331660009081526020819052604090203490555b565b8115156102e957610002565b6004548311156102f95760045492505b604051600160a060020a03331690600090859082818181858883f15050505050505050565b505050919090600052602060002090600202016000506040805180820190915284815260208181018590528254600160a060020a0319168617835584516001848101805460008281528590209596959194600293821615610100026000190190911692909204601f9081018390048201939289019083901061042b57805160ff19168380011785555b5061045b929150610417565b50506002015b80821115610167578054600160a060020a031916815560018181018054600080835592600290821615610100026000190190911604601f8190106103fd57506103b3565b601f0160209004906000526020600020908101906103b391905b808211156101675760008155600101610417565b828001600101855582156103a7579182015b828111156103a757825182600050559160200191906001019061043d565b50505050505050565b6002805460018101808355828183801582901161049a5760060281600602836000526020600020918201910161049a9190610592565b50505091909060005260206000209060060201600060c06040519081016040528033815260200185815260200160016040518059106104d65750595b81815260209182028101820160409081529083526000838301819052429184019190915260609290920182905282518554600160a060020a03191617855582810151805160018781018054818752958590209698975095601f600292871615610100026000190190961691909104850184900481019491939092019083901061061057805160ff19168380011785555b50610640929150610417565b5050600060038201819055600482015560058101805460ff191690556006015b80821115610167578054600160a060020a031916815560018181018054600080835592600290821615610100026000190190911604601f8190106105f257505b506002820180546000808355918252602090912061057291810190610417565b601f0160209004906000526020600020908101906105d29190610417565b82800160010185558215610566579182015b82811115610566578251826000505591602001919060010190610622565b505060408201518160020160005090805190602001908280548282559060005260206000209081019282156106a2579160200282015b828111156106a25782518254600160a060020a0319161782556020929092019160019190910190610676565b506106c89291505b80821115610167578054600160a060020a03191681556001016106aa565b5050606082015160038201556080820151600482015560a0909101516005909101805460ff191690911790555050565b33600160a060020a0316600090815260208190526040902055565b600280548290811015610002576000919091526006027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad00180546001810180835590919082801582901161077857600083815260209020610778918101908301610417565b505050506002600050818154811015610002576000919091526006027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad00180546001810180835582818380158290116107e2576000838152602090206107e2918101908301610417565b5050506000928352506020909120018054600160a060020a03191633179055600280548290811015610002576000919091526006027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad101805460010190555056",
    address: "0x61caa4a39fb9e89d7ae38fe4d59da191967ce480",
    generated_with: "2.0.9",
    contract_name: "Crypto"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Crypto error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Crypto error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Crypto error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Crypto error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Crypto = Contract;
  }

})();
